/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.90
 * Generated at: 2023-07-23 06:49:55 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import java.io.*;
import java.util.*;
import toMovie.MovieDao;
import toMovie.MovieList;

public final class movie_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/WEB-INF/css/style.css", Long.valueOf(1689487853000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("java.io");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("toMovie.MovieList");
    _jspx_imports_classes.add("toMovie.MovieDao");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; \\charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
 List <MovieList> list = MovieDao.getWatchlist(); 
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<style>");
      out.write("@charset \"UTF-8\";\n");
      out.write(".button-container1{\n");
      out.write("	background-color: #C60;\n");
      out.write("	padding: 15px 32px;\n");
      out.write("  	text-align: center;\n");
      out.write("  	font-size: 36px;\n");
      out.write("  	font-family: Jockey One;\n");
      out.write("  	margin-right:100px;\n");
      out.write("  	box-shadow: 0 12px 16px 0 rgba(0,0,0,0.24), 0 17px 50px 0 rgba(0,0,0,0.19);\n");
      out.write("}\n");
      out.write(".button-container2{\n");
      out.write("	background-color: #C60;\n");
      out.write("	padding: 15px 32px;\n");
      out.write("  	color: #1E1E1E;\n");
      out.write("  	text-align: center;\n");
      out.write("  	font-size: 36px;\n");
      out.write("  	font-family: Jockey One;\n");
      out.write("  	margin-left:100px;\n");
      out.write("  	box-shadow: 0 12px 16px 0 rgba(0,0,0,0.24), 0 17px 50px 0 rgba(0,0,0,0.19);\n");
      out.write("}\n");
      out.write(".button-flex{\n");
      out.write("	display:flex;\n");
      out.write("	display: inline-block;\n");
      out.write("}\n");
      out.write(".table_mod1{\n");
      out.write("  border: 1px solid black;\n");
      out.write("  border-collapse: collapse;\n");
      out.write("  display: flex;\n");
      out.write("}\n");
      out.write(".tr{\n");
      out.write("  border: 1px solid black;\n");
      out.write("  border-collapse: collapse;\n");
      out.write("}\n");
      out.write("header {\n");
      out.write("  background-color: #C60;\n");
      out.write("  padding: 20px;\n");
      out.write("  text-align: center;\n");
      out.write("  font-size: 30px;\n");
      out.write("  font-family: Jockey One;\n");
      out.write("  color: white;\n");
      out.write("}\n");
      out.write("\n");
      out.write("</style>\n");
      out.write("<script type=\"text/javascript\" src = \"https://ajax.googleapis.com/ajax/libs/jquery/1.6.0/jquery.min.js\"></script>\n");
      out.write("<script src=\"jquery-3.2.1.js\"></script>\n");
      out.write("<title>MovieList</title>\n");
      out.write("<header><h1>ToMovie</h1></header>\n");
      out.write("</head>\n");
      out.write("<body>\n");

//*** CONNECTING TO DATABASE ***///
Class.forName("com.mysql.cj.jdbc.Driver");
Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/cs157aprojectteam6","root","Halo4mlg!");			

      out.write('\n');
      out.write('\n');
      out.write("\n");
      out.write("<h2>Film Catalog</h2>\n");
      out.write("<h3><a href = \"catalog.jsp\">View Full Film Descriptions</a></h3>\n");

try{
	PreparedStatement display = con.prepareStatement("SELECT title,year FROM cs157aprojectteam6.Movie");				
	ResultSet showDisplay = display.executeQuery();
	if(showDisplay.next()==false){
		out.println("No movies in the ToMovie");
	}
	else{
      out.write("\n");
      out.write("		<div class= \"table_mod1\">\n");
      out.write("			<table>\n");
      out.write("			<tr><th>Title</th><th>Year Released</th></tr> ");

			do
			{ 
      out.write("\n");
      out.write("				<tr><td>");
      out.print( showDisplay.getString(1) );
      out.write("</td><td>");
      out.print( showDisplay.getString(2) );
      out.write("</td></tr>");

			}while(showDisplay.next());
      out.write("\n");
      out.write("			</table>\n");
      out.write("		</div>");
 
	}
}
catch(Exception e){
	e.getStackTrace();
}

      out.write('\n');
      out.write('\n');
      out.write("\n");
      out.write("<h2>Watchlist</h2>\n");
      out.write("<table border=\"2\" width=\"100%\">\n");
      out.write("    <tr>\n");
      out.write("        <th>Queue #</th>\n");
      out.write("        <th>Title</th>\n");
      out.write("        <th>Status</th>\n");
      out.write("        <th>Edit</th>\n");
      out.write("        <th>Delete</th>\n");
      out.write("    </tr>\n");
      out.write("    ");
 for (MovieList w : list) { 
      out.write("\n");
      out.write("        <tr>\n");
      out.write("            <td>");
      out.print( w.getListID() );
      out.write("</td>\n");
      out.write("            <td>");
      out.print( w.getTitle() );
      out.write("</td>\n");
      out.write("            <td>");
      out.print( w.getStatus() );
      out.write("</td>\n");
      out.write("            <td><!-- edit button here --></td>\n");
      out.write("            <td><!-- delete button here --></td>\n");
      out.write("        </tr>\n");
      out.write("    ");
 } 
      out.write("\n");
      out.write("</table>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
